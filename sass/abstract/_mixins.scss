@use "./variables" as *;

// *** Font Settings ***
@mixin font-settings($size, $weight, $line-height, $l-spacing: null) {
	font-size: $size;
	font-weight: $weight;
	line-height: $line-height;

	@if $l-spacing {
		letter-spacing: $l-spacing;
	}
}

// *** Flexbox Settings ****
@mixin flex-settings(
	$justify: center,
	$align: center,
	$direction: null,
	$gap: null
) {
	display: flex;
	justify-content: $justify;
	align-items: $align;
	flex-direction: $direction;

	@if $gap {
		gap: $gap;
	}
}

// test

// *** Dimensions Settings ***
@mixin dimension-settings(
	$width: null,
	$height: null,
	$min-height: null,
	$max-width: null
) {
	@if $width {
		width: $width;
	}
	@if $height {
		height: $height;
	}
	@if $min-height {
		min-height: $min-height;
	}
	@if $max-width {
		max-width: $max-width;
	}
}

// *** Mixin for html font-sizes ***
// *** Mixin + Lists + loop @for ***
@mixin responsive-settings(
	$breakpoints: (
		1300px,
		960px,
	),

	$f-sizes: (
		50%,
		40%,
	)
) {
	@for $i from 1 through length($breakpoints) {
		@media (max-width: nth($breakpoints, $i)) {
			font-size: nth($list: $f-sizes, $n: $i);
		}
	}
}

/*
// Example of how to correctly call the mixin
// ----------------------------------------------------
// Breakpoints and f-sizes are lists containing predefined values.
// In the @for loop, we declare a variable $i and iterate from 1 to the length of the lists.
// Inside the @media query, the nth function is used to access the nth value from the breakpoints list.
// In the font-size block, we again use nth to get the nth value from the f-sizes list.
// As a result, the following media queries will be generated:

@media (max-width: 1300) {
// first loop
font-size: 50%;

// second loop
font-size: 40%;


// Sorry for my English, is a not perfectly, I am still learning ðŸ˜Š
 */

// *** Mixin Reponsive for sections ***

@mixin respon-design($breakpoint) {
	@if $breakpoint == desktop-medium {
		@media (max-width: 1200px) {
			@content;
		}
	}

	@if $breakpoint == desktop {
		@media (max-width: 1050) {
			@content;
		}
	}

	@if $breakpoint == tablet-large {
		@media (max-width: 860px) {
			@content;
		}
	}

	@if $breakpoint == tablet-medium {
		@media (max-width: 810px) {
			@content;
		}
	}

	@if $breakpoint == tablet {
		@media (max-width: 768px) {
			@content;
		}
	}

	@if $breakpoint == tablet-small {
		@media (max-width: 720px) {
			@content;
		}
	}

	@if $breakpoint == mobile-ex-large {
		@media (max-width: 610px) {
			@content;
		}
	}

	@if $breakpoint == mobile-large {
		@media (max-width: 510px) {
			@content;
		}
	}

	@if $breakpoint == mobile {
		@media (max-width: 450px) {
			@content;
		}
	}
}

// *** Footer Background Image ***
@mixin footer-background-images($desktop-image, $tablet-image, $mobile-image) {
	background: linear-gradient(rgba($color-cyan, 0.8), rgba($color-cyan, 0.8)),
		url($desktop-image) no-repeat;
	background-size: cover;

	@include respon-design(tablet) {
		background: linear-gradient(
				rgba($color-cyan, 0.8),
				rgba($color-cyan, 0.8)
			),
			url($tablet-image) no-repeat;
		background-size: cover;
	}

	@include respon-design(mobile) {
		background: linear-gradient(
				rgba($color-cyan, 0.8),
				rgba($color-cyan, 0.8)
			),
			url($mobile-image) no-repeat;
		background-size: cover;
	}
}
